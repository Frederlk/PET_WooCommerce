@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url("https://fonts.googleapis.com/css?family=Roboto:regular,500,700&display=swap");

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Roboto";
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$white: #ffffff;
$dark: #272d4e;
$grey: #94a2b3;
$purple: #7854f7;
$darkPurple: #5f37ef;
$blue: #299ef3;
$orange: #ffba49;
$green: #70c217;
$red: #ef4358;
$mainColor: $dark; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1600;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
    background-color: $white;
    @include scrollbars(rem(8), $dark, $white);
    // Скролл заблокирован
    .lock & {
        overflow: hidden;
        touch-action: none;
    }
    // Сайт загружен
    .loaded & {
        .header {
            @extend %anim;
            transform: translate(0px, 0px);
        }
        .page {
            @extend %anim;
        }
        .content-home__buttons,
        .content-home__text,
        .content-home__title {
            @extend %anim;
            transform: translate(0px, 0px);
        }
        .images-home__item,
        .images-home__dots,
        .images-home {
            @extend %anim;
        }
        .images-home__image_2 {
            @extend %anim;
            transform: translate(0px, 0px);
        }
    }
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
    position: relative;
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    // Прижимаем footer
    > main {
        flex: 1 1 auto;
    }
    // Фикс для слайдеров
    > * {
        min-width: 0;
    }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================
[class*="__container"] {
    @if ($maxWidthContainer>0) {
        max-width: rem($maxWidthContainer);
        box-sizing: content-box;
        margin: 0 auto;
    }
    @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
    }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";

//========================================================================================================================================================

.page {
    position: relative;
    @extend %no-anim;
    transition: opacity 0.3s ease 0s, visibility 0.3s ease 0s;
    &__home {
    }
    &__simple {
        @include adaptiveValue("padding-top", 65, 60);
        @include adaptiveValue("padding-bottom", 65, 20);
    }
    &__doc {
        @include adaptiveValue("padding-top", 100, 60);
        @include adaptiveValue("padding-bottom", 100, 20);
    }
    &__testi {
    }
    &__support {
    }
    &::after {
        content: "";
        position: absolute;
        width: 100%;
        height: 100vh;
        top: 0;
        left: 0;
        background: linear-gradient(180deg, #e5efff 0%, rgba(229, 239, 255, 0.262661) 83.7%, rgba(229, 239, 255, 0) 100%);
        z-index: 1;
    }
}
